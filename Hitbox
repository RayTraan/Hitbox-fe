local CoreGui = game:GetService("StarterGui") 
local Players = game:GetService("Players") 
getgenv().HitboxSize = 25 
getgenv().HitboxTransparency = 0.8 
getgenv().HitboxStatus = false 
getgenv().TeamCheck = false 
getgenv().Walkspeed = 16 
getgenv().Jumppower = 50 
--// UI local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/UI-Library/main/Source/MyUILib(Unamed).lua"))(); 
local Window = Library:Create("Hitbox Menu") 
local ToggleGui = Instance.new("ScreenGui") 
local Toggle = Instance.new("TextButton") 
ToggleGui.Name = "ToggleGui_HE" 
ToggleGui.Parent = game.CoreGui 
Toggle.Name = "Toggle" 
Toggle.Parent = ToggleGui 
Toggle.BackgroundColor3 = Color3.fromRGB(24, 24, 24) Toggle.BackgroundTransparency = 0.660 
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0) 
Toggle.Size = UDim2.new(0.0650164187, 0, 0.0888099447, 0) Toggle.Font = Enum.Font.SourceSans 
Toggle.Text = "Toggle" 
Toggle.TextScaled = true 
Toggle.TextColor3 = Color3.fromRGB(40, 40, 40) 
Toggle.TextSize = 24.000 
Toggle.TextXAlignment = Enum.TextXAlignment.Left 
Toggle.Active = true Toggle.Draggable = true Toggle.MouseButton1Click:connect(function() 
Library:ToggleUI() 
end) 
local HomeTab = Window:Tab("Home","rbxassetid://10888331510")
HomeTab:Section("Settings") 
HomeTab:TextBox("Hitbox Size (TextBox)", function(value) getgenv().HitboxSize = value end) 
HomeTab:TextBox("Hitbox Transparency", function(number) getgenv().HitboxTransparency = number end) 
HomeTab:Section("Main") 
HomeTab:Toggle("Hitbox", function(state) 	getgenv().HitboxStatus = state game:GetService('RunService').RenderStepped:connect(function() 		if HitboxStatus == true and TeamCheck == false then 			for i,v in next, game:GetService('Players'):GetPlayers() do 				if v.Name ~= game:GetService('Players').LocalPlayer.Name then 					pcall(function() 						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize) 						v.Character.HumanoidRootPart.Transparency = HitboxTransparency 						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really white") 						v.Character.HumanoidRootPart.Material = "Neon" 						v.Character.HumanoidRootPart.CanCollide = false 					end) 				end 			end elseif HitboxStatus == true and TeamCheck == true then for i,v in next, game:GetService('Players'):GetPlayers() do 				if game:GetService('Players').LocalPlayer.Team ~= v.Team then 					pcall(function() 						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize) 						v.Character.HumanoidRootPart.Transparency = HitboxTransparency 						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really white") 						v.Character.HumanoidRootPart.Material = "Neon" 						v.Character.HumanoidRootPart.CanCollide = false 					end) 				end 			end elseif HitboxStatus == true and TeamCheck == true and FriendCheck == true then for i,v in next, game:GetService('Players'):GetPlayers() do 				if game:GetService('Players').LocalPlayer.Team ~= v.Team and not game:GetService('Players'):IsFriendsWith(UserId) then 					pcall(function() 						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize) 						v.Character.HumanoidRootPart.Transparency = HitboxTransparency 						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really white") 						v.Character.HumanoidRootPart.Material = "Neon" 						v.Character.HumanoidRootPart.CanCollide = false 					end) 				end 			end 		else 		 for i,v in next, game:GetService('Players'):GetPlayers() do 				if v.Name ~= game:GetService('Players').LocalPlayer.Name then 					pcall(function() 						v.Character.HumanoidRootPart.Size = Vector3.new(2,2,1) 						v.Character.HumanoidRootPart.Transparency = 1 						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey") 						v.Character.HumanoidRootPart.Material = "Plastic" 						v.Character.HumanoidRootPart.CanCollide = false 					end) 				end 			end 		end 	end) end)
HomeTab:Toggle("Team", function(state) getgenv().TeamCheck = state end) 
HomeTab:Toggle("Esp", function(state) getgenv().enabled = state --Toggle on/off getgenv().filluseteamcolor = true --Toggle fill color using player team color on/off getgenv().outlineuseteamcolor = true --Toggle outline color using player team color on/off getgenv().fillcolor = Color3.new(0, 0, 0) --Change fill color, no need to edit if using team color getgenv().outlinecolor = Color3.new(1, 1, 1) --Change outline color, no need to edit if using team color getgenv().filltrans = 0.5 --Change fill transparency getgenv().outlinetrans = 0.5 --Change outline transparency loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/Highlight-ESP.lua"))() end) 
local c = workspace.CurrentCamera local ps = game:GetService("Players") local lp = ps.LocalPlayer local rs = game:GetService("RunService") local function esp(p,cr) 	local h = cr:WaitForChild("Humanoid") 	local hrp = cr:WaitForChild("Head") 	local text = Drawing.new("Text") 	text.Visible = false 	text.Center = true 	text.Outline = false 	text.Font = 3 	text.Size = 16.16 	text.Color = Color3.new(170,170,170) 	local conection 	local conection2 	local conection3 	local function dc() 		text.Visible = false 		text:Remove() 		if conection then 			conection:Disconnect() 			conection = nil 		end 		if conection2 then 			conection2:Disconnect() 			conection2 = nil 		end 		if conection3 then 			conection3:Disconnect() 			conection3 = nil 		end 	end 	conection2 = cr.AncestryChanged:Connect(function(_,parent) 		if not parent then 			dc() 		end 	end) 	conection3 = h.HealthChanged:Connect(function(v) 		if (v<=0) or (h:GetState() == Enum.HumanoidStateType.Dead) then 			dc() 		end 	end) 	conection = rs.RenderStepped:Connect(function() 		local hrp_pos,hrp_onscreen = c:WorldToViewportPoint(hrp.Position) 		if hrp_onscreen and ESPName == true then 			text.Position = Vector2.new(hrp_pos.X, hrp_pos.Y - 27) 			text.Text = p.DisplayName.." (@"..p.Name..")" 			text.Visible = true 		else 			text.Visible = false 		end 	end) end local function p_added(p) 	if p.Character then 		esp(p,p.Character) 	end 	p.CharacterAdded:Connect(function(cr) 		esp(p,cr) 	end) end for i,p in next, ps:GetPlayers() do 	if p ~= lp then 		p_added(p) 	end end ps.PlayerAdded:Connect(p_added)
